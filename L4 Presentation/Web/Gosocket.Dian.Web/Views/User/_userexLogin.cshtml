@using Gosocket.Dian.Web.Models
@model UserLoginViewModel

<div class="bhoechie-tab-content active">
    <center>
        <a href=""><img alt="Dian" src="../Content/img/LogoDian.png" width="180" class=""></a>

        @using (Html.BeginForm("ContributorUserLogin", "User", FormMethod.Post, new { id = "userex-login-form" }))
        {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.RecaptchaToken, new { id = "CompanyRecaptchaToken", @class = "RecaptchaToken" })
                <div class="form-group">
                    @Html.DropDownListFor(m => m.CompanyIdentificationType, new SelectList(Model.IdentificationTypes, "Id", "Description", Model.CompanyIdentificationType), new { id = "CompanyIdentificationType", @class = "form-control selectpicker" })
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-user-circle-o"></i>
                        </div>
                        @Html.TextBoxFor(m => m.CompanyCode, new { @class = "form-control", placeholder = "Nº documento representante legal", autocomplete = "off" })
                    </div>
                    @Html.ValidationMessageFor(m => m.CompanyCode, "", new { @class = "text-danger text-left" })
                </div>
                <div class="form-group">
                    @Html.DropDownListFor(m => m.IdentificationType, new SelectList(Model.IdentificationTypes, "Id", "Description"), "Seleccione el tipo de documento del Usuario Autorizado...", new { id = "IdentificationType", @class = "form-control selectpicker" })
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-user-circle-o"></i>
                        </div>
                        @Html.TextBoxFor(m => m.UserCode, new { @class = "form-control", placeholder = "N° Documento Usuario Autorizado...", autocomplete = "off" })
                    </div>
                    @Html.ValidationMessageFor(m => m.UserCode, "", new { @class = "text-danger text-left" })
                </div>
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-briefcase"></i>
                        </div>
                        @Html.PasswordFor(m => m.Password,  new { @class = "form-control", placeholder = "Contraseña", autocomplete = "off" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger text-left" })
                    @*@Html.ValidationMessageFor(m => m.CompanyLoginFailed, "", new { @class = "text-danger text-left" })*@
                </div>
                <div class="left-section textRecovery">
                    <p>
                        <um>
                            <button id="forgot-password" class="btn btn-link btn-link-recovery">Olvide mi contraseña</button>
                        </um>
                    </p>
                </div>
                <button type="submit" class="btn btn-gosocket btn-lg btn-block" style="margin-top: 10px;">
                    <i class=""></i> Entrar
                </button>
        }

    </center>
</div>
