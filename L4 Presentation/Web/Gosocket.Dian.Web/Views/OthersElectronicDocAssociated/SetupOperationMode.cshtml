@model Gosocket.Dian.Web.Models.OtherDocElecSetupOperationModeViewModel
@{
    ViewBag.title = "Configurar modo de operación - " + @Model.ContributorType;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="page-content radian-view margin-20">
    <div class="title-container">
        <p class="title-view">
            @ViewBag.title
        </p>
        <div class="underline-title"></div>

        <div class="back-button"><a href="@Url.Action("Index","OthersElectronicDocAssociated", new { Id = (int)ViewBag.Id })"><i class="fa fa-chevron-left"></i> Volver</a></div>
    </div>
    <div class="margin-top-50">
        <div class="panel" id="panel-form" data-target="#panel-form" data-toggle="panel-overlay">
            <div class="panel-body padding-top-20">
                <div class="pad-btm padding-bottom-0">
                    <div class="row margin-horizontal-0">
                        @using (Html.BeginForm("SetupOperationModePost", "OthersElectronicDocAssociated", FormMethod.Post, new { id = "formst" }))
                        {
                            @Html.HiddenFor(m => m.ContributorId)
                            @Html.HiddenFor(m => m.ContributorTypeId)
                            @*@Html.HiddenFor(m => m.SoftwareTy)*@
                            @Html.HiddenFor(m => m.SoftwareIdBase)
                            @Html.HiddenFor(m => m.ElectronicDocId)

                            @Html.Partial("_setupOperationModeForm")
                        }

                        @Html.Partial("_setupOperationModeList")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Content/js/Radian/RadianIndex.js"></script>
<script src="~/Content/js/Radian/RadianOperationMode.js"></script>
<script src="~/Content/js/Radian/constants.js"></script>
<script src="~/Content/js/Radian/RadianSteps.js"></script>

@section Scripts{

    <script>

        $(document).on('change', '#ProviderId', function () {
            let selectedValue = $(this).val();
            if (selectedValue != null && selectedValue != '') {
                $('#SoftwareUrl').val('');
                getSoftwares(selectedValue);
            }
        });

        $(document).on('change', '#SoftwareId', function () {
            let selectedValue = $(this).val();
            if (selectedValue != null && selectedValue != '') {
                $('#SoftwareName').val($('#SoftwareId option:selected').text());
                getDataSoftwareSeleccionado(selectedValue);
            }
        })

        function getDataSoftwareSeleccionado(SoftwareId){

            $.ajax({
                url: "@Url.Action("GetDataBySoftwareId")",
                type: "POST",
                data: { SoftwareId: SoftwareId },
                datatype: "json",
                success: function (result) {
                    if (result != null) {
                        console.log(result);
                        $('#SoftwareUrl').val(result.url);
                        //$('#SoftwareType').val(result.SoftwareType);
                        $('#SoftwarePin').val(result.SoftwarePIN);
                    }
                    else
                        bootbox.alert("No se pudo realizar la consulta");
                },
                complete: function () {

                },
                error: function (result) {
                    bootbox.alert("Error de conexión al intentar obtener el listado de Software");
                    console.log(result.status + ' ' + result.statusText);
                    return false;
                }
            });  //ajax

        }

        function getSoftwares(ProviderId) {
            $("#SoftwareId").html('<option value="" selected="selected">Seleccione...</option>');
            $('#ulSoftwareId').html('<li data-original-index="0" class="selected"><a tabindex="0" class=""' +
                'data-normalized-text="Seleccione..."><span class="text">Seleccione...</span><span class="fa fa-check check-mark"></span></a></li>');

            cambiarTextoSelect();

            $.ajax({
                url: "@Url.Action("GetSoftwaresByContributorId", "OthersElectronicDocAssociated")",
                type: "POST",
                data: { id: ProviderId, electronicDocumentId: @Model.ElectronicDocId },
                datatype: "json",
                success: function (result) {

                    if (result != null && result.res != null) {

                        $.each(result.res, function (index, value) {
                            $('#SoftwareId').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                            $('#ulSoftwareId').append('<li data-original-index="' + (index + 1) + '"><a tabindex="0" class=""' +
                                ' data-normalized-text="' + value.Name + '"><span class="text">' + value.Name + '</span>' +
                                '<span class="fa fa-check check-mark"></span></a></li>');
                        });
                    }
                    else
                        bootbox.alert("No se pudo realizar la consulta");
                },
                complete: function () {

                },
                error: function (result) {
                    bootbox.alert("Error de conexión al intentar obtener el listado de Software");
                    console.log(result.status + ' ' + result.statusText);
                    return false;
                }
            });  //ajax

        }

        function cambiarTextoSelect() {
            var botones = $(":button");
            var boton;

            $.each(botones, function (index1, val1) {
                if (val1.attributes != undefined && $(val1).hasClass("selectpicker")) {

                    boton = val1;
                    $.each(val1.attributes, function (index, value) {

                        if (value.localName == "data-id" && value.nodeValue == "SoftwareId") {

                            boton.firstElementChild.textContent = "Seleccione...";

                        }
                    });
                }
            });
        }

        $(document).ready(function () {

            fnShowHidecampos();

            $("#OperationModeId").change(function () {
                fnShowHidecampos();
            });

            $("#SoftwareName").blur(function () {
                fnvalidSoftwareName();
            });

            $("#SoftwarePin").blur(function () {
                fnvalidSoftwarePin();
            });

            $("#save-operation-mode").click(function (e) {
                var form = $('#formst');
                if (form.valid()) {
                    var valid1 = fnvalidSoftwarePin();
                    var valid2 = fnvalidSoftwareName();
                    if (valid1 || valid2)
                        return;

                    e.preventDefault();
                    showLoading('#panel-form', 'Cargando', 'Guardando datos, por favor espere.')
                    var model = {
                        Id: $("#OperationModeSelectedId").val(),
                        ContributorId: @Model.ContributorId,
                        OperationModeId: $("#OperationModeId").val(),
                        ElectronicDocId: $("#ElectronicDocId").val(),
                        ContributorTypeId: $("#ContributorTypeId").val(),
                        SoftwareName: $("#SoftwareName").val(),
                        SoftwarePin: $("#SoftwarePin").val(),
                        SoftwareUrl: $("#SoftwareUrl").val(),
                        SoftwareIdBase: $("#SoftwareIdBase").val(),
                        ProviderId: $("#ProviderId").val(),
                        SoftwareId: $("#SoftwareId").val(),
                    };
                    AddOperationModeODE("@Url.Action("SetupOperationModePost", "OthersElectronicDocAssociated")", model);
                }
            });





            function AddOperationModeODE(url, ViewModel) {
                var metod = 'POST';
                var data = ViewModel;
                var actionError = (error) => {
                    var message = error.Message;
                    var button = AlertExec();
                    showConfirmation(message, button);
                }
                var actionSuccess = (response) => {
                    var message = response.Message;
                    var operation = () => { location.reload() };
                    var button = AlertExec(operation);
                    showConfirmation(message, button);
                }
                ajaxFunction(url, metod, data, actionError, actionSuccess);
            }

            ODEDeleteOperationMode = function (Id) {
                @*var url ="@Url.Action("DeleteOperationMode", "OthersElectronicDocAssociated")";
                showLoading('#table-modes', 'Cargando', 'Buscando datos, por favor espere.');
                var metod = 'POST';
                var data = {
                    Id: Id
                }
                var actionError = () => { }
                var actionSuccess = (response) => {
                    showConfirmation(response.message, AlertExec(() => location.reload()))
                }
                ajaxFunction(url, metod, data, actionError, actionSuccess)*@


                showConfirmation("¿Está seguro de eliminar el modo de operación configurado previamente?", ConfirmExec(
                        function () {
                            $.ajax({
                                url: "@Url.Action("DeleteOperationMode", "OthersElectronicDocAssociated")",
                                type: "POST",
                                data: { Id: Id },
                                datatype: "json",
                                success: function (result) {
                                    if (result != null) {

                                        if (result.code != 200) {
                                            showConfirmation(result.message, AlertExec(null))
                                            return;
                                        }

                                        bootbox.dialog({
                                            message: "<div class='media'><div class='media-body' style='padding: 40px 30px 55px 30px !important;  line-height: 100%'><div style='text-align: center;'><i class='fa fa-check-circle iconcheckcircle'></i></div><br><h4 class='text-thin'>Se canceló el registro exitosamente</h4></div></div>",
                                            onEscape: () => {
                                                location.reload();
                                             }
                                        });
                                    }
                                    else
                                        bootbox.alert("No se pudo realizar la cancelación");
                                    },
                                complete: function () {

                                },
                                error: function (result) {
                                    bootbox.alert("Error de conexión al intentar hacer la cancelación");
                                    console.log(result.status + ' ' + result.statusText);
                                    return false;
                                }
                        });  //ajax


                     }
                    , "", () => hideLoading('#panel-form')));
            };

            function fnvalidSoftwareName() {
                $("#validSoftwareName").text('');
                if ($("#OperationModeId").val() == "1") {
                    if ($("#SoftwareName").val() == '' || $("#SoftwareName").val() == undefined) {
                        $("#validSoftwareName").text("El campo es requerido");
                        return true;
                    }
                }
                return false;
            }

            function fnvalidSoftwarePin() {
                $("#validSoftwarePin").text('');
                if ($("#OperationModeId").val() == "1") {
                    if ($("#SoftwarePin").val() == '' || $("#SoftwarePin").val() == undefined) {
                        $("#validSoftwarePin").text("El campo es requerido");
                        return true;
                    }
                }
                return false;
            }

            function fnShowHidecampos() {

                $("#SoftwareName").val('');
                $("#SoftwarePin").val('');
                $("#validSoftwareName").text('');
                $("#validSoftwarePin").text('');

                if ($("#OperationModeId").val() == "1") {
                    $(".section-own-software").show();
                    $(".section-software-technology-provider").hide();
                }
                else {
                    $(".section-own-software").hide();
                    $(".section-software-technology-provider").show();
                }
            }
        });
    </script>
}
