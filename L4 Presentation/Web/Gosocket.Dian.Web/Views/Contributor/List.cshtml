@model Gosocket.Dian.Web.Models.ContributorTableViewModel
@using Gosocket.Dian.Web.Common
@using Gosocket.Dian.Domain.Common;
@using Gosocket.Dian.Infrastructure
@{
    var env = ConfigurationManager.GetValue("Environment");
    switch (int.Parse(Model.Type))
    {
        case (int)ContributorType.Biller:
            ViewBag.Title = "Listado de facturadores electrónicos";
            break;
        case (int)ContributorType.AuthorizedProvider:
            ViewBag.Title = "Listado de proveedores autorizados";
            break;
        case (int)ContributorType.Provider:
            ViewBag.Title = "Listado de proveedores tecnológicos";
            break;
        default:
            ViewBag.Title = "Listado de contribuyentes";
            break;
    }
}

@section css
{
    <!--Bootstrap Select [ OPTIONAL ]-->
    <link href="~/Content/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet">
    <link href="~/Content/plugins/chosen/chosen.min.css" rel="stylesheet">

    <style>
    </style>
}


@{var defaultHtmlAttr = new Dictionary<string, object> { { "class", "form-control" } };}

    <div class="page-content margin-15">
        <div class="row margin-horizontal-0">

            <div class="panel">
            <div class="panel-heading">
                <h3 class="panel-title">@ViewBag.Title</h3>
            </div>

            <div class="panel-body padding-top-20">
                @if (User.IsInAnyRole("Administrador", "Super") && env == "Test")
                {
                    <div class="form-inline padding-bottom-10">
                        <div class="row margin-horizontal-0">
                            <div class="col-sm-12 table-toolbar-left padding-left-0">
                                <a href="@Url.Action("Add", "Contributor", new { type = Model.Type })" class="btn btn-default"><i class="fa fa-plus"></i> Agregar</a>
                            </div>
                        </div>
                        <hr class="margin-0" />
                    </div>
                }

                <div class="pad-btm padding-bottom-0">
                    <div class="row margin-horizontal-0">
                        @using (Html.BeginForm("List", "Contributor", FormMethod.Post, new { id = "contributors-form" }))
                        {
                            @Html.HiddenFor(m => m.Page)
                            @Html.HiddenFor(m => m.Type)

                            <input id="startDate" name="StartDate" type="hidden" value="@Model.StartDate" />
                            <input id="endDate" name="EndDate" type="hidden" value="@Model.EndDate" />

                            <div class="row margin-horizontal-0 margin-bottom-10" style="margin-left:5px; margin-right:5px;">
                                <div class="col-md-12 padding-horizontal-0">
                                    <div id="panel-form" data-target="#panel-form" data-toggle="panel-overlay" class="panel panel-bordered-dian">

                                        <div class="panel-body padding-20 padding-bottom-0">
                                            <div class="row">
                                                <div class="col-sm-3 padding-xs-0">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Code, new { @class = "control-label" })
                                                        @Html.TextBoxFor(m => m.Code, defaultHtmlAttr)
                                                        @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                                <div class="col-sm-3 padding-xs-0">
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.AcceptanceStatusId, new { @class = "control-label" })
                                                        @Html.DropDownListFor(m => m.AcceptanceStatusId, new SelectList(Model.AcceptanceStatuses, "Id", "Name"), new { @class = "form-control selectpicker" })

                                                    </div>
                                                </div>
                                                <div class="col-sm-3 padding-xs-0">
                                                    <div class="form-group">
                                                        <label class="control-label">Rango de fechas</label>
                                                        <div class="form-group">
                                                            <div class="btn btn-default col-sm-12" id="dashboard-report-range">
                                                                <i class="icon-calendar"></i>&nbsp;
                                                                <span class="thin uppercase hidden-xs"></span>&nbsp;
                                                                <i class="fa fa-angle-down"></i>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="panel-footer-grey text-right">
                                            <button type="button" class="btn btn-default btn-hover-gosocket btn-search"><i class="fa fa-filter"></i>&nbsp;&nbsp;Buscar</button>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="row margin-horizontal-0">
                                <div class="col-md-9 table-toolbar-left padding-left-0">
                                </div>
                                <div class="col-md-3 table-toolbar-right padding-right-0 table-pagination">
                                    @if (Model.Contributors.Count > 0)
                                    {
                                        <span class="text-muted">
                                            <strong>@(Model.Page * Model.Length + 1)-@(Model.Length > Model.Contributors.Count ? (Model.Page) * Model.Length + Model.Contributors.Count : (Model.Page + 1) * Model.Length)</strong>
                                        </span>
                                        <div class="btn-group btn-group margin-left-5" style="padding-right: 20px;">
                                            <a class="btn btn-default paginate-btn prev-page" @(Model.Page == 0 ? "disabled=\"disabled\"" : "")>
                                                <span class="fa fa-chevron-left"></span>
                                            </a>
                                            <a class="btn btn-default paginate-btn next-page" @(Model.Contributors.Count < Model.Length ? "disabled=\"disabled\"" : "")>
                                                <span class="fa fa-chevron-right"></span>
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>

                @Html.Partial("_items")

                @if (Model.Contributors.Count == 0)
                {
                    <div class="alert panel-footer-grey text-center contributor-alert">
                        Ningún resultado disponible para mostrar.
                    </div>
                }

                <div class="pull-right table-pagination padding-top-10">
                    @if (Model.Contributors.Count > 0)
                    {
                        <span class="text-muted">
                            <strong>@(Model.Page * Model.Length + 1)-@(Model.Length > Model.Contributors.Count ? (Model.Page) * Model.Length + Model.Contributors.Count : (Model.Page + 1) * Model.Length)</strong>
                        </span>
                        <div class="btn-group btn-group margin-left-5" style="padding-right: 20px;">
                            <a class="btn btn-default paginate-btn prev-page" @(Model.Page == 0 ? "disabled=\"disabled\"" : "")>
                                <span class="fa fa-chevron-left"></span>
                            </a>
                            <a class="btn btn-default paginate-btn next-page" @(Model.Contributors.Count < Model.Length ? "disabled=\"disabled\"" : "")>
                                <span class="fa fa-chevron-right"></span>
                            </a>
                        </div>
                    }
                </div>

            </div>
        </div>

    </div>
</div>

@section Scripts
{
    <script>
        var startDate;
        var endDate;


        $(document).ready(function () {

            var form = $('#contributors-form');
            $("#Code").focus();

            if (@Model.Contributors.Count == 0) {
                $('.table-responsive').css('display', 'none');
            }

            $('#Code').keyup(function (event) {
                event.preventDefault();
                if (event.which === 13)
                    if (form.valid()) {
                        $('#Page').val(0);
                        $('#Type').val('@ViewBag.Type');
                        form.submit();
                    }
            });

            $('.btn-search').click(function () {
                $('#Page').val(0);
                showLoading('#panel-form', 'Cargando', 'Buscando datos, por favor espere.');
                $(this).attr('disabled', 'disabled');
                $(this).html('<i class="fa fa-circle-o-notch fa-spin"></i> Buscando...');
                $('.table-pagination').css('display', 'none');
                $('.table-responsive').css('display', 'none');
                form.submit();
            });

            // Pagination
            $('.next-page').click(function () {
                $('#Page').val(@Model.Page + 1);
                form.submit();
            });

            $('.prev-page').click(function () {
                $('#Page').val(@Model.Page - 1);
                form.submit();
            });
            // Pagination
        });

        $(document).on('mouseenter', ".iffyTip", function () {
            var $this = $(this);
            if (this.offsetWidth < this.scrollWidth && !$this.attr('title')) {
                $this.tooltip({
                    title: $this.text(),
                    placement: "bottom",
                    container: "body"
                });
                $this.tooltip('show');
            }
        });
        startDate = moment("@Model.StartDate.ToString("yyyy-MM-dd")");
        endDate = moment("@Model.EndDate.ToString("yyyy-MM-dd")");

        startDate.locale('es');
        endDate.locale('es');

        $('#dashboard-report-range').daterangepicker({
            "buttonClasses": "btn btn-block btn-default",
            "startDate": startDate,
            "endDate": endDate,
            "maxDate": moment().endOf('month'),
            "applyClass": "btn-hover-gosocket",
            "cancelClass": "btn-hover-gosocket",
            "ranges": {
                'Últimos 7 Días': [moment().subtract('days', 6), moment()],
                'Mes actual': [moment().startOf('month'), moment().endOf('month')],
                'Mes Anterior': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')],
                'Últimos 3 Meses': [moment().subtract('month', 3).startOf('month'), moment().endOf('month')]
            },
            "locale": {
                "format": "YYYY/MM/DD",
                "separator": " - ",
                "applyLabel": "Aceptar",
                "cancelLabel": "Cancelar",
                "fromLabel": "Desde",
                "toLabel": "Hasta",
                "customRangeLabel": "Rango de Fechas",
                "daysOfWeek": [
                    "Do",
                    "Lu",
                    "Ma",
                    "Mi",
                    "Ju",
                    "Vi",
                    "Sa"
                ],
                "monthNames": [
                    "Enero",
                    "Febrero",
                    "Marzo",
                    "Abril",
                    "Mayo",
                    "Junio",
                    "Julio",
                    "Agosto",
                    "Septiembre",
                    "Octubre",
                    "Noviembre",
                    "Diciembre"
                ],
                "firstDay": 1
            },
            opens: ('left'),
        }, function (start, end, label) {
                $('#dashboard-report-range span').html(capitalizeMonth(start.format('YYYY/MM/DD')) + ' al ' + capitalizeMonth(end.format('YYYY/MM/DD')));
            startDate = start;
            endDate = end;
                $('#startDate').val(startDate.format('YYYY/MM/DD'));
                $('#endDate').val(endDate.format('YYYY/MM/DD'));
        });
        $('#dashboard-report-range span').html(capitalizeMonth(startDate.format('YYYY/MM/DD')) + ' al ' + capitalizeMonth(endDate.format('YYYY/MM/DD')));
        $('#dashboard-report-range').show();

        function capitalizeMonth(date) {
            return date.substring(0,3) + date.charAt(3).toUpperCase() + date.slice(4);
        }
    </script>
}
