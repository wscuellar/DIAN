@model Gosocket.Dian.Web.Models.TestSetOthersDocumentsViewModel

@{
    ViewBag.Title = "Agregar Set de Pruebas - Otros documentos";
}

<div class="page-content margin-15">
    <div class="row margin-horizontal-0">
        <div class="panel">
            <div class="panel-heading">
                <h3 class="panel-title">@ViewBag.Title</h3>
            </div>

            <div class="panel-body padding-top-20">
                <div class="row margin-horizontal-0">
                    <div id="panel-form" data-target="#panel-form" data-toggle="panel-overlay" class="panel panel-bordered-dian margin-bottom-0">
                        @using (Html.BeginForm("Add", "TestSetOthersDocuments", FormMethod.Post, new { id = "add-testset-form" }))
                        {
                            @Html.Partial("_form")
                            <p id="greaterThanTotalRequired" style="display:none" class="text-danger margin-left-20">El total de Documentos Aceptados requeridos no puede superar al Total de Documentos Requeridos</p>
                            <div class="panel-footer text-right">
                                <a href="@Url.Action("List", "TestSetOthersDocuments")" class="btn btn-default">Volver</a>
                                <button type="button" class="btn btn-default btn-hover-gosocket btn-save">Guardar</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Add Electronic Document-->
    <div class="modal fade" id="modalElectronicDocument" tabindex="-1" aria-labelledby="modalElectronicDocumentLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalElectronicDocumentLabel">Agregar un nuevo Documento Electrónico</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    
                    <div class="form-group">
                        <label class="control-label">Nombre o descripción</label>
                        <input type="text" id="txtElectronicDocumentName" class="form-control" maxlength="50" />
                    </div>
                    <p id="validNewElectronicDocument" class="text-danger" style="display:none">Por favor digite el nombre del documento electrónico</p>
                    <br />
                    <div class="form-group text-center">
                        <button type="button" class="btn btn-success" onclick="addNewElectronicDocument()">Guardar</button>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

<script>

    var enumElectronicsDocuments =
    {
        ElectronicPayroll: 1, //Nomina electronica y Nomina de ajuste
        ImportDocument: 2,
        SupportDocument: 3,
    };

        $(document).ready(function ($) {

            if ('@ViewBag.ErrorExistsTestSet' == 'True') {
                showNotification('warning', 'fa fa-check fa-2x', 'floating', 'Aviso.', 'Ya se encuentra registrado un set de pruebas para este Documento eletrónico y modo de operación.');
            }

            $('.btn-save').click(function () {
                var form = $('#add-testset-form');
                if (form.valid()) {
                    showLoading('#panel-form', 'Guardando', 'Procesando datos, por favor espere.');
                    form.submit();
                }
            });

            $('#ElectronicDocumentId').change(function () {

                showHideElectronicPayroll();

            });

            //if ($('#ElectronicDocumentId').val() == enumElectronicsDocuments.ElectronicPayroll) {
                showHideElectronicPayroll();
            //}

            $("#OthersDocumentsRequired").focusout(function () {
                console.log("OthersDocumentsRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#ElectronicPayrollAjustmentRequired").focusout(function () {
                console.log("ElectronicPayrollAjustmentRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#OthersDocumentsAcceptedRequired").focusout(function () {
                console.log("OthersDocumentsAcceptedRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#ElectronicPayrollAjustmentAcceptedRequired").focusout(function () {
                console.log("ElectronicPayrollAjustmentAcceptedRequired focusout");
                updateTotalOthersDocuments();

            });


            if ($("#TestSetId").val() != '' && $("#TestSetId").val() != null)
                updateTotalOthersDocuments();

        });//ready


    function showHideElectronicPayroll() {

        if ($('#ElectronicDocumentId').val() == enumElectronicsDocuments.ElectronicPayroll) {
            $("#divPayrollAjustment").show();
            $("#divPayrollAjustmentAcepted").show();

            $("#lblOthersDocumentsRequired").text('Nomina eletrónica');
            $("#lblOthersDocumentsAcceptedRequired").text('Nomina electrónica');

            if ($("#TestSetId").val() == '' || $("#TestSetId").val() == null) {
                $("#OthersDocumentsRequired").val('');
                $("#ElectronicPayrollAjustmentRequired").val('');
                $("#OthersDocumentsAcceptedRequired").val('');
                $("#ElectronicPayrollAjustmentAcceptedRequired").val('');
            }
        }
        else {
            $("#divPayrollAjustment").hide();
            $("#divPayrollAjustmentAcepted").hide();

            $("#lblOthersDocumentsRequired").text($('#ElectronicDocumentId option:selected').text());
            $("#lblOthersDocumentsAcceptedRequired").text($('#ElectronicDocumentId option:selected').text());

            if ($("#TestSetId").val() == '' || $("#TestSetId").val() == null) {
                $("#OthersDocumentsRequired").val('');
                $("#ElectronicPayrollAjustmentRequired").val('');
                //$("#OthersDocumentsAcceptedRequired").val('');
                //$("#ElectronicPayrollAjustmentAcceptedRequired").val('');
            }

        }
    }

    function updateTotalOthersDocuments() {

        var val1 = 0, val2 = 0, val3 = 0, val4 = 0;

        if ($("#OthersDocumentsRequired").val() != '' && $("#OthersDocumentsRequired").val() != null)
            val1 = parseInt($("#OthersDocumentsRequired").val());

        if ($("#ElectronicPayrollAjustmentRequired").val() != '' && $("#ElectronicPayrollAjustmentRequired").val() != null)
            val2 = parseInt($("#ElectronicPayrollAjustmentRequired").val());

        if ($("#OthersDocumentsAcceptedRequired").val() != '' && $("#OthersDocumentsAcceptedRequired").val() != null)
            val3 = parseInt($("#OthersDocumentsAcceptedRequired").val());

        if ($("#ElectronicPayrollAjustmentAcceptedRequired").val() != '' && $("#ElectronicPayrollAjustmentAcceptedRequired").val() != null)
            val4 = parseInt($("#ElectronicPayrollAjustmentAcceptedRequired").val());

        $("#TotalDocumentRequired").val(val1 + val2);
        $("#TotalDocumentAcceptedRequired").val(val3 + val4);

        if ((val3 + val4) > (val1 + val2)) {
            $(".btn-save").prop("disabled", true);
            $("#greaterThanTotalRequired").show();
        }
        else {
            $(".btn-save").prop("disabled", false);
            $("#greaterThanTotalRequired").hide();
        }
    }

    function addNewElectronicDocument() {

        if ($("#txtElectronicDocumentName").val().length <= 0) {
            $("#validNewElectronicDocument").show();
            $("#txtElectronicDocumentName").focus();
        }
        else
            $("#validNewElectronicDocument").hide();

        $.ajax({
            url: "@Url.Action("AddNewElectronicDocument", "TestSetOthersDocuments")",
            type: "POST",
            data: { docName: $("#txtElectronicDocumentName").val() },
            datatype: "json",
            success: function (jsdata) {

                console.log('res ElectronicDocument:', jsdata);
                if (jsdata != null && jsdata.res != null) {

                    if (jsdata.res.Id > 0) {
                        $("#ElectronicDocumentId").append(`<option value='"${jsdata.res.Id}"'>${jsdata.res.Name}</option>`);
                        $('#modalElectronicDocument').modal('hide');
                        $.niftyNoty({
                            type: "success",
                            container: "floating",
                            title: "Mensaje de información",
                            message: "Documento electrónico Agregado exitosamente",
                            closeBtn: false,
                            timer: 5000
                        });

                        if ($("#TestSetId").val() != '' && $("#TestSetId").val() != null) {
                            location.href = "@Url.Action("Add", "TestSetOthersDocuments")" +
                                "?electronicDocumentId=" + $("#ElectronicDocumentId").val() +
                                "&operationModeId=" + $("#OperationModeId").val();
                        }
                        else {
                            location.href = "@Url.Action("Add", "TestSetOthersDocuments")";
                        }
                    }
                }

            },
            complete: function () {

            },
            error: function (result) {
                alert("Error al tratar de crear un nuevo documento electrónico");
                return false;
            }
        });  //ajax

    }

</script>
}